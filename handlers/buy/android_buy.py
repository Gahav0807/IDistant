from aiogram import Router, types
from aiogram.fsm.context import FSMContext
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton, ReplyKeyboardRemove
from states import BuyAndroidStates
from keyboards.android import buy_android_menu
from keyboards.common import confirm_menu, main_menu, share_phone_keyboard
from config import ADMINS

android_buy_router = Router()

# --------------------------ANDROID--------------------------------------

@android_buy_router.message(lambda message: message.text == "Androidü§ñ")
async def buy_android(message: types.Message, state: FSMContext):
    await message.answer("–í—ã–±–µ—Ä–∏—Ç–µ –º–∞—Ä–∫—É —Ç–µ–ª–µ—Ñ–æ–Ω–∞:", reply_markup=buy_android_menu)
    await state.set_state(BuyAndroidStates.choosing_brand)

@android_buy_router.message(BuyAndroidStates.choosing_brand)
async def enter_android_budget(message: types.Message, state: FSMContext):
    brand = message.text
    await state.update_data(brand=brand)
    await message.answer("–í–≤–µ–¥–∏—Ç–µ –≤–∞—à –±—é–¥–∂–µ—Ç:", reply_markup=types.ReplyKeyboardRemove())
    await state.set_state(BuyAndroidStates.entering_budget)

@android_buy_router.message(BuyAndroidStates.entering_budget)
async def awaiting_admin_response(message: types.Message, state: FSMContext):
    budget = message.text
    await state.update_data(budget=budget)
    await message.answer("–í–≤–µ–¥–∏—Ç–µ –≤–∞—à –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞:", reply_markup=share_phone_keyboard)
    await state.set_state(BuyAndroidStates.entering_phone)

@android_buy_router.message(BuyAndroidStates.entering_phone, lambda message: message.contact)
async def confirm_sale(message: types.Message, state: FSMContext):
    phone_number = message.contact.phone_number
    await state.update_data(phone_number=phone_number)
    data = await state.get_data()
    
    response = (f"–í—ã —Ö–æ—Ç–∏—Ç–µ –∫—É–ø–∏—Ç—å:\n\n"
                f"Android {data['brand']}.\n"
                f"–ë—é–¥–∂–µ—Ç {data['budget']}.\n"
                f"–ù–æ–º–µ—Ä –¥–ª—è —Å–≤—è–∑–∏: {phone_number}\n\n"
                "–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ –∏–ª–∏ –æ—Ç–º–µ–Ω–∏—Ç–µ –∑–∞—è–≤–∫—É."
                )
    
    await message.answer(response, reply_markup=confirm_menu)
    await state.set_state(BuyAndroidStates.confirming)

@android_buy_router.message(BuyAndroidStates.confirming)
async def process_confirmation(message: types.Message, state: FSMContext):
    if message.text == "–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å":
        data = await state.get_data()
        user_id = message.from_user.id
        
        response_admin = (f"üîî –ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞ –Ω–∞ –ø—Ä–æ–¥–∞–∂—É( Android ):\n\n"
                          f"üì± –ú–æ–¥–µ–ª—å: {data['brand']}\n"
                          f"üí∞ –¶–µ–Ω–∞: {data['budget']} —Ä—É–±.\n"
                          f"üìû –ö–æ–Ω—Ç–∞–∫—Ç: {data['phone_number']}")

        keyboard = InlineKeyboardMarkup(
            inline_keyboard=[
                [InlineKeyboardButton(text="–û—Ç–≤–µ—Ç–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é", callback_data=f"admin_reply:{user_id}")]
            ]
        )

        for admin_id in ADMINS:
            await message.bot.send_message(chat_id=admin_id, text=response_admin, reply_markup=keyboard)

        await message.answer("–ó–∞—è–≤–∫–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞! –û–∂–∏–¥–∞–π—Ç–µ –æ—Ç–≤–µ—Ç–∞ –º–µ–Ω–µ–¥–∂–µ—Ä–∞.", reply_markup=main_menu)
    else:
        await message.answer("–í—ã –æ—Ç–º–µ–Ω–∏–ª–∏ –∑–∞—è–≤–∫—É.", reply_markup=main_menu)

    await state.clear()