from aiogram import Router, types, F
from aiogram.fsm.context import FSMContext
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton, ReplyKeyboardRemove
from states import SellAndroidStates
from keyboards.common import confirm_menu, main_menu, share_phone_keyboard
from config import ADMINS

android_sell_router = Router()

# --------------------------ANDROID--------------------------------------

@android_sell_router.message(lambda message: message.text == "Androidüí∏")
async def buy_android(message: types.Message, state: FSMContext):
    await message.answer("–í–≤–µ–¥–∏—Ç–µ –±—Ä–µ–Ω–¥ & –º–æ–¥–µ–ª—å —Ç–µ–ª–µ—Ñ–æ–Ω–∞:", reply_markup=ReplyKeyboardRemove())
    await state.set_state(SellAndroidStates.entering_model)

@android_sell_router.message(SellAndroidStates.entering_model)
async def enter_android_budget(message: types.Message, state: FSMContext):
    await state.update_data(brand_and_model=message.text)
    await message.answer("–í–≤–µ–¥–∏—Ç–µ —Ü–µ–Ω—É:")
    await state.set_state(SellAndroidStates.entering_price)

@android_sell_router.message(SellAndroidStates.entering_price)
async def enter_battery(message: types.Message, state: FSMContext):
    await state.update_data(price=message.text)
    await message.answer("–ü—Ä–∏–∫—Ä–µ–ø–∏—Ç–µ —Ñ–æ—Ç–æ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞:")
    await state.set_state(SellAndroidStates.attaching_photos)

@android_sell_router.message(SellAndroidStates.attaching_photos)
async def upload_photo(message: types.Message, state: FSMContext):
    if not message.photo:
        await message.answer("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Ñ–æ—Ç–æ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞.")
        return
    await state.update_data(photo=message.photo[-1].file_id)
    await message.answer("–û–ø–∏—à–∏—Ç–µ —Ç–æ–≤–∞—Ä (–µ—Å—Ç—å –ª–∏ –¥–µ—Ñ–µ–∫—Ç—ã, –±—ã–ª –ª–∏ –≤ —Ä–µ–º–æ–Ω—Ç–µ, –∫–æ–º–ø–ª–µ–∫—Ç –∏ —Ç.–¥.):")
    await state.set_state(SellAndroidStates.entering_description)

@android_sell_router.message(SellAndroidStates.entering_description)
async def awaiting_admin_response(message: types.Message, state: FSMContext):
    await state.update_data(description=message.text)
    await message.answer("–í–≤–µ–¥–∏—Ç–µ –≤–∞—à –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞:", reply_markup=share_phone_keyboard)
    await state.set_state(SellAndroidStates.entering_phone)

@android_sell_router.message(SellAndroidStates.entering_phone, lambda message: message.contact)
async def confirm_sale(message: types.Message, state: FSMContext):
    phone_number = message.contact.phone_number
    await state.update_data(phone_number=phone_number)
    data = await state.get_data()

    response = (f"–í—ã —Ö–æ—Ç–∏—Ç–µ –ø—Ä–æ–¥–∞—Ç—å:\n\n"
                f"üì± –ú–æ–¥–µ–ª—å: {data['brand_and_model']}\n"
                f"üí∞ –¶–µ–Ω–∞: {data['price']} —Ä—É–±.\n"
                f"‚ÑπÔ∏è –û–ø–∏—Å–∞–Ω–∏–µ: {data['description']}\n"
                f"üìû –ö–æ–Ω—Ç–∞–∫—Ç: {phone_number}\n\n"
                "–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ –∏–ª–∏ –æ—Ç–º–µ–Ω–∏—Ç–µ –∑–∞—è–≤–∫—É.")

    await message.answer_photo(photo=data['photo'], caption=response, reply_markup=confirm_menu)
    await state.set_state(SellAndroidStates.confirming)

@android_sell_router.message(SellAndroidStates.confirming)
async def process_confirmation(message: types.Message, state: FSMContext):
    if message.text == "–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å":
        data = await state.get_data()
        user_id = message.from_user.id
        
        response_admin = (f"üîî –ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞ –Ω–∞ –ø—Ä–æ–¥–∞–∂—É( Android ):\n\n"
                          f"üì± –ú–æ–¥–µ–ª—å: {data['brand_and_model']}\n"
                          f"üí∞ –¶–µ–Ω–∞: {data['price']} —Ä—É–±.\n"
                          f"‚ÑπÔ∏è –û–ø–∏—Å–∞–Ω–∏–µ: {data['description']}\n"
                          f"üìû –ö–æ–Ω—Ç–∞–∫—Ç: {data['phone_number']}")

        keyboard = InlineKeyboardMarkup(
            inline_keyboard=[
                [InlineKeyboardButton(text="–û—Ç–≤–µ—Ç–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é", callback_data=f"admin_reply:{user_id}")]
            ]
        )

        for admin_id in ADMINS:
            await message.bot.send_photo(chat_id=admin_id, photo=data['photo'], caption=response_admin, reply_markup=keyboard)

        await message.answer("–ó–∞—è–≤–∫–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞! –û–∂–∏–¥–∞–π—Ç–µ –æ—Ç–≤–µ—Ç–∞ –º–µ–Ω–µ–¥–∂–µ—Ä–∞.", reply_markup=main_menu)
    else:
        await message.answer("–í—ã –æ—Ç–º–µ–Ω–∏–ª–∏ –∑–∞—è–≤–∫—É.", reply_markup=main_menu)

    await state.clear()